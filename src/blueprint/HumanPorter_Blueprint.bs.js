// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");
var Vector$Whatever = require("../utils/Vector.bs.js");
var IO_System$Whatever = require("../system/IO_System.bs.js");
var Draw_System$Whatever = require("../system/Draw_System.bs.js");
var Move_System$Whatever = require("../system/Move_System.bs.js");
var Time_System$Whatever = require("../system/Time_System.bs.js");
var Image_Component$Whatever = require("../component/Image_Component.bs.js");

var humanImage = (require('./assets/human.png').default);

var initialState = /* record */[
  /* entity : [] */0,
  /* position */Belt_MapString.empty,
  /* image */Belt_MapString.empty,
  /* timeNow */0.0,
  /* delta */0.0
];

function logic(state) {
  IO_System$Whatever.update(/* () */0);
  var newState = Draw_System$Whatever.update(Move_System$Whatever.update(Time_System$Whatever.update(state)));
  requestAnimationFrame((function (param) {
          return logic(newState);
        }));
  return /* () */0;
}

var entity = "xD";

logic(/* record */[
      /* entity : :: */[
        entity,
        /* [] */0
      ],
      /* position */Belt_MapString.set(Belt_MapString.empty, entity, Vector$Whatever.create(0.0, 1.0)),
      /* image */Belt_MapString.set(Belt_MapString.empty, entity, Image_Component$Whatever.create(humanImage)),
      /* timeNow */0.0,
      /* delta */0.0
    ]);

var class_tables = [
  0,
  0,
  0
];

function create(state) {
  if (!class_tables[0]) {
    var $$class = CamlinternalOO.create_table(0);
    var env = CamlinternalOO.new_variable($$class, "");
    var env_init = function (env$1) {
      var self = CamlinternalOO.create_object_opt(0, $$class);
      self[env] = env$1;
      return self;
    };
    CamlinternalOO.init_class($$class);
    class_tables[0] = env_init;
  }
  return Curry._1(class_tables[0], 0);
}

exports.humanImage = humanImage;
exports.initialState = initialState;
exports.logic = logic;
exports.entity = entity;
exports.create = create;
/* humanImage Not a pure module */
